<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>VM安装Linux安装选择的三种网络模式</title>
      <link href="2021/050733119.html"/>
      <url>2021/050733119.html</url>
      
        <content type="html"><![CDATA[<p>1.桥接模式<br>    该模式下，每个Linux系统都会生成一个自己的网络ip用于和外部联系，这样会导致该网段形成网络冲突问题。<br>2.NAT模式<br>    该模式下，每个Linux系统会有虚拟网络ip，且原主机也会产生个ip地址，此ip和Linux相互转换，并且可以通过原主机自己的ip代理访问外界，解决了ip冲突问题。但导致Linux可以通过原ip代理访问外界，外界不能访问Linux。<br>    <img src="https://img-blog.csdnimg.cn/20210417160827740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70#pic_center"></p><p>3.主机模式：相当于独立系统，不和外界交换</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 远程登录和上传下载 Xshell&amp;Xftp</title>
      <link href="2021/050725004.html"/>
      <url>2021/050725004.html</url>
      
        <content type="html"><![CDATA[<h2 id="Xshell6-amp-Xftp6资源地址"><a href="#Xshell6-amp-Xftp6资源地址" class="headerlink" title="Xshell6&amp;Xftp6资源地址"></a>Xshell6&amp;Xftp6资源地址</h2><p>下载free-for-home-school版本<br>地址：<a href="https://www.netsarang.com/en/free-for-home-school/">https://www.netsarang.com/en/free-for-home-school/</a><br>我上传了一份可免费下载<br><a href="https://download.csdn.net/download/qq_41696518/16746160">点击下载</a></p><h2 id="Xshell6：远程登录"><a href="#Xshell6：远程登录" class="headerlink" title="Xshell6：远程登录"></a>Xshell6：远程登录</h2><p>Xshell是目前最好的远程登录到Linux操作系统的软件，流畅的速度并且完美解决了中文乱码的问题，是目前程序员首选的软件<br>Xshell是一个强大的安全终端模拟软件，它支持SSH1,SSH2，以及Windows平台下的telnet协议<br>Xshell可以在Windows界面下访问远端不同系统的服务器，从而达到远程控制终端的目的</p><h3 id="Xshell配置和使用"><a href="#Xshell配置和使用" class="headerlink" title="Xshell配置和使用"></a>Xshell配置和使用</h3><p><strong>管理员身份运行Xshell.exe</strong><br><img src="https://img-blog.csdnimg.cn/20210418231407920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"><br>第一次运行点击<strong>新建</strong><br><img src="https://img-blog.csdnimg.cn/20210418231446459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"><br>注意：这里名称可随便输入，但主机号要输入 要连接的Linux的ip地址。然后点击确认。<br>第一次使用要输入登录用户名和密码。<br>双击刚刚创建的主机名<br><img src="https://img-blog.csdnimg.cn/20210418231651812.png"><br>输入用户名和密码<br><img src="https://img-blog.csdnimg.cn/20210418231706271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"><br>输入完成后，第一次会跳出使用一次还是保存以后也可使用。根据需求选择即可。<br>完毕，即可在Xshell中连接linux</p><h2 id="Xftp6：远程上传下载文件"><a href="#Xftp6：远程上传下载文件" class="headerlink" title="Xftp6：远程上传下载文件"></a>Xftp6：远程上传下载文件</h2><p>是一个基于Windows平台的功能强大的SFTP、FTP文件传输软件。使用了Xftp以后，windows用户能安全地在UNIX/Linux和Windows PC之间传输文件</p><h3 id="Xftp安装和配置"><a href="#Xftp安装和配置" class="headerlink" title="Xftp安装和配置"></a>Xftp安装和配置</h3><p><strong>管理员身份运行安装程序Xftp.exe</strong><br><img src="https://img-blog.csdnimg.cn/20210419140725983.png"><br>傻瓜式安装即可。安装完成，双击打开Xftp软件<br><img src="https://img-blog.csdnimg.cn/20210419141116287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"><br>第一次则选择新建，步骤和Xshell一样<br><img src="https://img-blog.csdnimg.cn/20210419141602461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></p><p>注意协议和端口(要选22号端口)<br><img src="https://img-blog.csdnimg.cn/20210419142321754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></p><p>左边Windows右边Linux<br>要想上传下载，只需要选择双飞对应文件位置，拖动即可</p><h2 id="出现乱码问题，可按一下步骤解决"><a href="#出现乱码问题，可按一下步骤解决" class="headerlink" title="出现乱码问题，可按一下步骤解决"></a>出现乱码问题，可按一下步骤解决</h2><p>点击属性<br><img src="https://img-blog.csdnimg.cn/20210419142724126.png"><br>选择选项，将编码选择UTF-8<br><img src="https://img-blog.csdnimg.cn/20210419142839818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>忘记root密码，重置方法</title>
      <link href="2021/050759561.html"/>
      <url>2021/050759561.html</url>
      
        <content type="html"><![CDATA[<h2 id="重置root密码"><a href="#重置root密码" class="headerlink" title="重置root密码"></a>重置root密码</h2><ol><li>启动系统，进入开机界面，在界面中按”e”进入编辑界面<br><img src="https://img-blog.csdnimg.cn/20210420125420703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></li><li>进入编辑界面后，使用键盘上下键把光标往下移动，找到”Linux16”开头内容所在行，在行的最后面输入： <strong>init=/bin/sh</strong> <img src="https://img-blog.csdnimg.cn/20210420125850689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></li><li>接着，输入完成后，直接按快捷键：Ctrl+x 进入单用户模式</li><li>接着在光标闪烁位置输入：mount -o remount,rw / (注意单词间有空格)。完成后回车<br><img src="https://img-blog.csdnimg.cn/20210420130211154.png"></li><li>在新的一行最后输入：passwd，完成后回车。输入密码，然后再确认密码即可。密码修改成功后，会显示passwd……样式，说明成功<br><img src="https://img-blog.csdnimg.cn/2021042013042827.png"></li><li>接着，在鼠标闪烁位置(最后一行) 输入：touch /.autorelabel(注意touch后有空格),完成回车</li><li>继续在光标闪烁位置，输入：exec /sbin/init  (注意exec后有空格)。完成回车，等待系统自动修改密码，（时间较长），完成后，系统会重启。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>压缩和解压指令</title>
      <link href="2021/050755135.html"/>
      <url>2021/050755135.html</url>
      
        <content type="html"><![CDATA[<h2 id="压缩和解压"><a href="#压缩和解压" class="headerlink" title="压缩和解压"></a>压缩和解压</h2><h3 id="gzip-gunzip-指令"><a href="#gzip-gunzip-指令" class="headerlink" title="gzip/gunzip 指令"></a>gzip/gunzip 指令</h3><p>gzip 用于压缩文件，gunzip用于解压<br>基本语法：<br>gzip 文件                (功能：压缩文件,只能将文件压缩成*.gz文件)<br>gunzip 文件.gz    (功能：解压缩文件命令)<br>1）gzip压缩，将/home下的hello.txt文件进行压缩<br>gzip /home/hello.txt   (源文件直接被压缩，<strong>压缩后源文件不存在</strong>)<br>2）gunzip解压，将/home下的hello.txt.gz文件进行解压缩<br>gunzip hello.txt.gz </p><h3 id="zip-unzip-指令"><a href="#zip-unzip-指令" class="headerlink" title="zip/unzip 指令"></a>zip/unzip 指令</h3><p>用于<strong>压缩文件或者文件夹</strong>，项目打包发布很有用<br>基本语法：<br>zip [选项] XXX.zip 将要压缩的内容，<strong>压缩后源文件仍存在</strong><br>unzip [选项] xxx.zip，<strong>解压后XXX.zip仍存在</strong><br>zip常用选项：-r ：recursion递归压缩，即压缩目录<br>unzip常用选项：-d&lt;目录&gt;：指定解压文件存放的目录<br>1）将/home下的所有文件(包括home)进行压缩成myhome.zip<br>zip -r myhome.zip /home/<br>2）将myhome.zip解压到/opt/tmp目录下<br>unzip -d /opt/tmp /home/myhome.zip</p><h3 id="tar指令"><a href="#tar指令" class="headerlink" title="tar指令"></a>tar指令</h3><p>tar指令是打包指令，即可压缩也可解压，最后压缩文件是.tar.gz文件，<strong>压缩后源文件还在</strong><br>基本语法：tar [选项] XXX.tar.gz 打包的内容  (功能：打包目录，压缩文件格式是.tar.gz)<br>常用选项<br><img src="https://img-blog.csdnimg.cn/20210425143632858.png"></p><blockquote><p><strong>-z 用gzip来压缩/解压缩文件，加上该选项后可以将档案文件进行压缩，但还原时也一定要使用该选项进行解压缩。</strong></p></blockquote><p>1）压缩多个文件，将/home/pig.txt 和/home/cat.txt压缩成 pc.tar.gz<br>tar -zcvf pc.tar.gz /home/pig.txt /home/cat.txt<br><img src="https://img-blog.csdnimg.cn/20210425144221391.png"><br>2）将/home的文件夹压缩成myhome.tar.gz<br>tar -zcvf myhome.tar.gz /home/<br>3）将pc.tar.gz解压到当前目录，切换到/opt/<br>tar -zxvf pc.tar.gz<br>4）将myhome.tar.gz解压到/opt/tmp2目录下<br>tar -zxvf /home/myhome.tar.gz -C /opt/tmp2</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运行级别—Linux</title>
      <link href="2021/050714517.html"/>
      <url>2021/050714517.html</url>
      
        <content type="html"><![CDATA[<h2 id="运行级别"><a href="#运行级别" class="headerlink" title="运行级别"></a>运行级别</h2><ul><li>基本介绍<br>运行级别说明：<br>  0：关机<br>  1：单用户【找回丢失的密码】<br>  2：多用户状态没有网络服务<br>  3：多用户状态有网络服务<br>  4：系统未使用保留给用户<br>  5：图形界面<br>  6：系统重启<br>常用的运行级别为3、5，也可指定默认运行级别<br>CentOS7中，可以通过<strong>init 级别</strong>切换运行级别<br><img src="https://img-blog.csdnimg.cn/20210420122728552.png"></li></ul><h3 id="指定默认运行界别"><a href="#指定默认运行界别" class="headerlink" title="指定默认运行界别"></a>指定默认运行界别</h3><ul><li>CentOS7前后运行级别说明<br>在CentOS7以前，在/etc/inittab文件中可进行修改<br>在CentOS5后进行了简化（分为两种），如下：</li></ul><p><strong>multi-user.target</strong>:analogous to runlevel 3   ：即多用户级别类似于原来的级别3<br><strong>graphical.target</strong>:analogous to runlevel 5       ：即图形化级别类似于原来的5<br># To view current default target,run (查看当前默认运行级别指令):<br>systemctl get-default<br># To set a default target,run(设置默认运行级别指令):<br>systemctl set-default TARGET.target<br><img src="https://img-blog.csdnimg.cn/20210420123852984.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基本指令</title>
      <link href="2021/050756799.html"/>
      <url>2021/050756799.html</url>
      
        <content type="html"><![CDATA[<h2 id="关机、重启"><a href="#关机、重启" class="headerlink" title="关机、重启"></a>关机、重启</h2><p>shutdown -h now     立刻进行关机 (-h 即halt 停止)<br>shutdown -h 1            1分钟后关机(如果直接shutdown 默认为这个)<br>shutdown -r now        立刻重启(-r 即reboot 重启)<br>halt                            关机和上面作用一样(不同在于halt不会关闭电源，shutdown会)<br>reboot                        现在重启<br>sync                            把内存的数据同步到磁盘<br>注意细节：</p><ol><li>不管是重启还是关机，首先要运行sync命令，把内存的数据写到磁盘</li><li>目前的 shutdown/reboot/halt 等命令均已经提前进行sync，但最好自己执行一边，以防万一！</li></ol><h2 id="用户登录-切换-和注销"><a href="#用户登录-切换-和注销" class="headerlink" title="用户登录(切换)和注销"></a>用户登录(切换)和注销</h2><p>登录时尽量少用root账号登录，权限过大，容易误操作。可以利用普通用户登录，登陆后再用” su - 用户名” 命令切换成管理员身份<br><img src="https://img-blog.csdnimg.cn/20210419161051184.png"><br>(注意：密码输入时不会显示和变化，且su - 用户名 <strong>注意空格</strong>)<br>注销用户：提示符下输入logout即可注销用户<br>使用细节：</p><ol><li>logout注销指令在图形运行级别无效，在运行级别3下有效</li><li>从高权限切换到低权限的用户，不需要输入密码，反之需要</li><li>需要返回原来用户时，使用exit/logout指令</li></ol><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p>Linux系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号身份进入系统</p><h3 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h3><p>useradd 用户名<br>细节说明：</p><ol><li>创建用户成功后，会自动的创建和用户同名的家目录(默认家目录在/home里)</li><li>也可以通过useradd -d 指定目录 新的用户名 ，给新创建的用户指定家目录<br><img src="https://img-blog.csdnimg.cn/20210419195023680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"><br>上面图片就是创建了用户名为mokapeng2，且默认在home下创建家目录mokapeng2。<br>同时也创建了用户名为king的用户，且指定家目录为home下的test。<br>tips：当指定用户家目录时，不能指定已经存在的目录。</li></ol><h3 id="指定或修改密码"><a href="#指定或修改密码" class="headerlink" title="指定或修改密码"></a>指定或修改密码</h3><p>passwd 用户名  注意:一定要指定用户名，不然会默认当前用户<br><img src="https://img-blog.csdnimg.cn/20210419194321388.png"><br>tips：虽然这提示我是无效密码，但我取消了安全策略，所有一样有用，工作中要设置符合安全策略的密码</p><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><p>删除用户分两种情况</p><ul><li>删除用户，但要保留家目录        userdel 用户名  (之后再想删家目录，可直接删除此文件夹即可)</li><li>删除用户以及用户家目录        userdel -r 用户名  （一般情况下建议保留家目录，保留资料)</li></ul><h3 id="查询用户信息"><a href="#查询用户信息" class="headerlink" title="查询用户信息"></a>查询用户信息</h3><p>id 用户名<br><img src="https://img-blog.csdnimg.cn/20210419200650949.png"></p><h3 id="查看当前用户-登录用户"><a href="#查看当前用户-登录用户" class="headerlink" title="查看当前用户/登录用户"></a>查看当前用户/登录用户</h3><p>whoami/who am i<br><img src="https://img-blog.csdnimg.cn/2021041920124768.png"><br>tips：只会显示你最初登录的id信息，如果你登录root用户，切换成mokapeng用户，那显示的依旧是root用户</p><h3 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h3><p>类似于角色，系统可以对有共性/权限的多个用户进行统一的管理</p><ul><li>新增组<br>指令： groupadd 组名</li><li>删除组<br>指令：groupdel 组名</li><li>增加用户时，指定分组(没有指定时，会默认生成一个跟用户名相同的组，并把用户放到改组)<br>useradd -g 用户组 用户名<br><img src="https://img-blog.csdnimg.cn/20210419210336847.png"></li><li>修改用户的组<br>usermod -g 要加入的组名 用户名<br><img src="https://img-blog.csdnimg.cn/2021041921063530.png"></li></ul><h3 id="用户和组相关的文件"><a href="#用户和组相关的文件" class="headerlink" title="用户和组相关的文件"></a>用户和组相关的文件</h3><ul><li>/etc/passwd 文件<br>用户(user)的配置文件，记录用户的各种信息<br>每行的含义：  <strong>用户名:口令(密码):用户标识号:组标识号:注释性描述:主目录:登录Shell</strong></li><li>/etc/shadow 文件<br>口令配置文件<br>每行含义：  <strong>登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志</strong></li><li>/etc/group 文件<br>组(group)的配置文件，记录Linux包含的组的信息<br>每行含义：  <strong>组名:口令:组标识号:组内用户列表</strong></li></ul><h2 id="运行级别"><a href="#运行级别" class="headerlink" title="运行级别"></a>运行级别</h2><ul><li>基本介绍<br>运行级别说明：<br> 0：关机<br> 1：单用户【找回丢失的密码】<br> 2：多用户状态没有网络服务<br> 3：多用户状态有网络服务<br> 4：系统未使用保留给用户<br> 5：图形界面<br> 6：系统重启<br>常用的运行级别为3、5，也可指定默认运行级别<br>CentOS7中，可以通过<strong>init 级别</strong>切换运行级别<br><img src="https://img-blog.csdnimg.cn/20210420122728552.png"></li></ul><h3 id="指定默认运行界别"><a href="#指定默认运行界别" class="headerlink" title="指定默认运行界别"></a>指定默认运行界别</h3><ul><li>CentOS7前后运行级别说明<br>在CentOS7以前，在/etc/inittab文件中可进行修改<br>在CentOS5后进行了简化（分为两种），如下：</li></ul><p><strong>multi-user.target</strong>:analogous to runlevel 3   ：即多用户级别类似于原来的级别3<br><strong>graphical.target</strong>:analogous to runlevel 5       ：即图形化级别类似于原来的5<br># To view current default target,run (查看当前默认运行级别指令):<br>systemctl get-default<br># To set a default target,run(设置默认运行级别指令):<br>systemctl set-default TARGET.target<br><img src="https://img-blog.csdnimg.cn/20210420123852984.png"></p><h2 id="找回root密码-CentOS7"><a href="#找回root密码-CentOS7" class="headerlink" title="找回root密码(CentOS7)"></a>找回root密码(CentOS7)</h2><ul><li>启动系统，进入开机界面，在界面中按”e”进入编辑界面<br><img src="https://img-blog.csdnimg.cn/20210420125420703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></li><li>进入编辑界面后，使用键盘上下键把光标往下移动，找到”Linux16”开头内容所在行，在行的最后面输入： <strong>init=/bin/sh</strong> <img src="https://img-blog.csdnimg.cn/20210420125850689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></li><li>接着，输入完成后，直接按快捷键：Ctrl+x 进入单用户模式</li><li>接着在光标闪烁位置输入：mount -o remount,rw / (注意单词间有空格)。完成后回车<br><img src="https://img-blog.csdnimg.cn/20210420130211154.png"></li><li>在新的一行最后输入：passwd，完成后回车。输入密码，然后再确认密码即可。密码修改成功后，会显示passwd……样式，说明成功<br><img src="https://img-blog.csdnimg.cn/2021042013042827.png"></li><li>接着，在鼠标闪烁位置(最后一行) 输入：touch /.autorelabel(注意touch后有空格),完成回车</li><li>继续在光标闪烁位置，输入：exec /sbin/init  (注意exec后有空格)。完成回车，等待系统自动修改密码，（时间较长），完成后，系统会重启。</li></ul><h2 id="帮助指令"><a href="#帮助指令" class="headerlink" title="帮助指令"></a>帮助指令</h2><ul><li>man 获取帮助信息<br>man [命令或配置文件]    （功能：获取帮助信息）<br>eg：查看ls命令的帮助信息:  man ls</li><li>help<br>help 命令  (功能：获得shell内置命令的帮助信息)<br>eg: help cd</li></ul><h2 id="文件目录指令"><a href="#文件目录指令" class="headerlink" title="文件目录指令"></a>文件目录指令</h2><ul><li>pwd 指令<br>基本语法：pwd     (功能：显示当前工作目录的绝对路径)</li><li>ls 指令<br>基本语法：ls [选项] [目录或文件]<br>常用选项：</li><li>a:显示当前目录所有的文件和目录，包括隐藏的</li><li>l:以列表的方式显示信息<ul><li>cd 指令<br>基本语法:cd [参数]     (功能：切换到指定目录)<br>cd ~ 或cd：回到<strong>自己</strong>的家目录<br>cd.. :回到上一级目录</li><li>mkdir 指令  用于创建目录<br>基本语法 [选项] 要创建的目录<br>常用选项：</li></ul></li><li>p：创建多级目录 如创建多级目录/home/animal/tiger(即home下创建animal，且anmial下创建tiger)<br>mkdir -p /home/animal/tiger<ul><li>rmdir指令  删除<strong>空目录</strong><br>基本语法：rmdir [选项] 要删除的空目录<br>使用细节：rmdir 删除的是空目录，如果目录下有内容则无法删除。如果要删除非空目录，需要用rm -rf 要删除的目录(r是recursion递归的简写，f是force的简写)</li><li>touch 指令  创建空文件<br>基本语法：touch 文件名称<br>eg:在home下创建一个空文件hello.txt：touch /home/hello.txt</li><li>cp指令 拷贝文件(或文件目录)到指定目录<br>基本语法：cp [选项] source dest<br>常用选项：-r ：recursion递归复制<strong>整个文件夹</strong><br>eg:将/home/bbb整个目录拷贝到 /opt：cp -r /home/bbb/ /opt/<br>强制覆盖不提示方法：\cp     eg:\cp  -r /home/bbb/ /opt/</li><li>rm指令 移除文件或目录<br>基本语法：rm [选项] 要删除的文件或目录<br>常用选项：-r：recursion递归删除整个文件夹 -f：强制删除不提示</li><li>mv 指令 移动文件与目录 或重命名<br>基本语法：<br>mv oldNameFile new NameFile   (功能：重命名)<br>mv /old/movefile /targetfile  (功能：移动文件或目录)</li><li>cat 指令  查看文件内容(只看不可修改，所有更安全)<br>基本语法：cat [选项] 要查看的文件<br>常用选项： -n：显示行号<br>使用细节：cat只能看不能改，为了浏览方便，一般会带上<strong>管道命令</strong> | more<br>eg：cat -n /etc/profile | more</li><li>more 指令 一个基于VI编辑器的文本过滤器，它以全屏幕的方式按页显示文本文件的内容。more中内置了若干快捷键(交换的指令)，如下：<br><img src="https://img-blog.csdnimg.cn/20210424141236128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></li></ul></li><li>less指令 用来分屏查看文件内容，它的功能与more指令类似，但比more更强大，支持各种显示终端。less指令在显示文件内容时，并不是一次性将整个文件加载之后才显示，而是加载需要显示的内容，对大型文件有较高的效率<br>基本语法：less 要查看的文件<br><img src="https://img-blog.csdnimg.cn/20210424142119939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></li><li>echo指令：输出内容到控制台<br>基本语法：echo [选项] [输出内容]<br>eg:使用echo输出环境变量$PATH：echo $PATH<br><img src="https://img-blog.csdnimg.cn/20210424142917902.png"><br>使用echo输出 hello，world<br><img src="https://img-blog.csdnimg.cn/20210424143012733.png"></li><li>head指令：显示文件开头部分内容，默认情况下head指令显示文件前10行<br>基本语法：head 文件<br>eg: head -n 5 文件 查看文件头5行内容</li><li>tail指令：输出文件尾部的内容，默认显示文件后10行<br>基本语法：<br>tail 文件       查看尾10行<br>tail -n 5           查看尾5行<br>tail -f 文件     实时追踪文档的所有更新(退出则Ctrl+C)</li><li>&gt; 指令和&gt;&gt;指令<br>&gt;：输出重定向(直接覆盖)    &gt;&gt;：追加(增至末尾)<br>基本语法：<br>1）ls -l &gt; 文件                    列表的内容写入文件中<br>2）ls -al &gt;&gt; 文件                列表的内容追加到文件的末尾<br>3）cat 文件1 &gt; 文件2        文件1的内容覆盖到文件2<br>4）echo ‘内容’ &gt;&gt; 文件</li><li>ln指令 软连接，也称符号连接，类似于快捷方式，主要存放链接其他文件的路径<br>基本语法：<br>ln -s [源文件目录] [软链接名]  功能：给原文件创建一个软连接<br>eg:在/home 目录下创建一个软链接 myroot，连接到/root目录<br><img src="https://img-blog.csdnimg.cn/20210424150108981.png"><br>删除软连接==删除文件</li><li>history指令：查看已经执行过的历史命名，也可以执行历史指令<br>基本语法：history<br>1）history        显示所有历史命令<br>2）history 10    显示最近使用过的10条指令<br>3）!5                执行历史编号为5的指令</li></ul><h2 id="时间日期类指令"><a href="#时间日期类指令" class="headerlink" title="时间日期类指令"></a>时间日期类指令</h2><ul><li>date指令 显示当前日期和设置日期<br>显示日期基本语法：<br>1）date                显示当前时间<br>2）date +%Y        显示当前年份<br>3）date +%m        显示当前月份<br>4）date +%d        显示当前是哪一天<br>5）date “+%Y-%m-%d %H:%M:%S”        显示年月日时分秒<br><img src="https://img-blog.csdnimg.cn/20210425130757247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"><br>设置日期基本语法：date -s 字符串时间<br>eg：设置当前时间为2021-4-25 13:10:20<br>date -s “2021-4-25 13:10:20”</li><li>cal指令 查看日历<br>基本语法：cal [选项]    (功能：不加选项，显示本月日历)</li></ul><p>1)显示当前当月日历：cal<br>2）显示2021年整年日历：cal 2021</p><h2 id="搜索查找类"><a href="#搜索查找类" class="headerlink" title="搜索查找类"></a>搜索查找类</h2><ul><li>find指令<br>find指令将<strong>从指定目录向下递归地遍历其各个子目录</strong>，将满足条件的文件或者目录显示在终端<br>基本语法：find [搜索范围] [选项]<br>选项说明<br><img src="https://img-blog.csdnimg.cn/2021042513182757.png"><br>1）按文件名：根据名称查找/home目录下的hello.txt文件<br>find /home -name hello.txt<br>2）按拥有者：查找/opt目录下，用户名称为nobody的文件<br>find /opt -user nobody<br>3）查找整个linux系统下大于200M的文件(+n 大于 -n小于 n等于,单位有k,M,G)<br>find / -size +200M</li><li>locate指令<br>locate指令可以快速定位文件路径。locate指令利用事先建立的系统中所有文件名称及路径名的locate数据库实现快速定位给定文件。Locate指令无需遍历整个文件系统，查询速度较快。为了保证查询结果的准确，管理员必须定期更新locate<br>基本语法：locate 搜索文件<blockquote><p>由于locate指令基于数据库进行查询，所以第一次运行前，必须使用updatedb指令创建locate数据库。<br>eg：使用locate指令快速定位hello.txt文件所在目录</p></blockquote></li><li>which指令 查看某个指令在那个目录下<br>eg: which ls</li><li>grep指令和管道符号 |<br>grep:过滤查找，管道符号 | :将前一个命令结果传递给后面的命令处理<br>基本语法：grep [选项] 查找内容 源文件<br>常用选项：-n 显示匹配行及行号   -i 忽略大小写<br>eg:查找hello.txt文件中，’yes‘所在的行，并显示行号<br>cat hello.txt | grep -n ‘yes’  或grep -n ‘yes’ hello.txt<br><img src="https://img-blog.csdnimg.cn/20210425135618522.png"></li></ul><h2 id="压缩和解压"><a href="#压缩和解压" class="headerlink" title="压缩和解压"></a>压缩和解压</h2><ul><li>gzip/gunzip 指令<br>gzip 用于压缩文件，gunzip用于解压<br>基本语法：<br>gzip 文件                (功能：压缩文件,只能将文件压缩成*.gz文件)<br>gunzip 文件.gz    (功能：解压缩文件命令)<br>1）gzip压缩，将/home下的hello.txt文件进行压缩<br>gzip /home/hello.txt   (源文件直接被压缩，<strong>压缩后源文件不存在</strong>)<br>2）gunzip解压，将/home下的hello.txt.gz文件进行解压缩<br>gunzip hello.txt.gz </li><li>zip/unzip 指令<br>用于<strong>压缩文件或者文件夹</strong>，项目打包发布很有用<br>基本语法：<br>zip [选项] XXX.zip 将要压缩的内容，<strong>压缩后源文件仍存在</strong><br>unzip [选项] xxx.zip，<strong>解压后XXX.zip仍存在</strong><br>zip常用选项：-r ：recursion递归压缩，即压缩目录<br>unzip常用选项：-d&lt;目录&gt;：指定解压文件存放的目录<br>1）将/home下的所有文件(包括home)进行压缩成myhome.zip<br>zip -r myhome.zip /home/<br>2）将myhome.zip解压到/opt/tmp目录下<br>unzip -d /opt/tmp /home/myhome.zip</li><li>tar指令<br>tar指令是打包指令，即可压缩也可解压，最后压缩文件是.tar.gz文件，<strong>压缩后源文件还在</strong><br>基本语法：tar [选项] XXX.tar.gz 打包的内容  (功能：打包目录，压缩文件格式是.tar.gz)<br>常用选项<br><img src="https://img-blog.csdnimg.cn/20210425143632858.png"><blockquote><p><strong>-z 用gzip来压缩/解压缩文件，加上该选项后可以将档案文件进行压缩，但还原时也一定要使用该选项进行解压缩。</strong></p></blockquote>1）压缩多个文件，将/home/pig.txt 和/home/cat.txt压缩成 pc.tar.gz<br>tar -zcvf pc.tar.gz /home/pig.txt /home/cat.txt<br><img src="https://img-blog.csdnimg.cn/20210425144221391.png"><br>2）将/home的文件夹压缩成myhome.tar.gz<br>tar -zcvf myhome.tar.gz /home/<br>3）将pc.tar.gz解压到当前目录，切换到/opt/<br>tar -zxvf pc.tar.gz<br>4）将myhome.tar.gz解压到/opt/tmp2目录下<br>tar -zxvf /home/myhome.tar.gz -C /opt/tmp2</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组管理和权限管理 Linux</title>
      <link href="2021/050726398.html"/>
      <url>2021/050726398.html</url>
      
        <content type="html"><![CDATA[<h2 id="组基本介绍"><a href="#组基本介绍" class="headerlink" title="组基本介绍"></a>组基本介绍</h2><p>在Linux中的每个用户都必须属于一个组，<strong>不能独立于组外</strong>。在Linux中<strong>每个文件</strong>有所有者、所在组、其他组的概念。</p><ol><li>所有者</li><li>所在组</li><li>其他组</li><li>改变用户所在组</li></ol><h3 id="文件-目录-修改所有者-所在组"><a href="#文件-目录-修改所有者-所在组" class="headerlink" title="文件/目录 修改所有者 所在组"></a>文件/目录 修改所有者 所在组</h3><p>一般为文件的创建者，谁创建了该文件，就自然称为该文件的所有者</p><ul><li>查看文件的所有者：ls -ahl<br><img src="https://img-blog.csdnimg.cn/20210426123222131.png"><br>mokapeng是该文件的所有者，root是该文件的所在组，apple.txt是文件名</li><li>修改文件所有者：chown 用户名 文件名</li><li>修改文件所在组：chgrp 组名 文件名</li></ul><h3 id="组的创建"><a href="#组的创建" class="headerlink" title="组的创建"></a>组的创建</h3><p>基本指令：groupadd 组名<br>eg:实例<br>1）创建一个组，monster：groupadd monster<br>2）创建一个用户fox，并放入到monster中：useradd -g monster fox</p><h3 id="改变用户所在组"><a href="#改变用户所在组" class="headerlink" title="改变用户所在组"></a>改变用户所在组</h3><p>在添加用户时，可以指定该用户添加到哪个组，同样的用root的管理权限也可改变某个用户所在组。</p><ul><li>改变用户所在组<br>usermod -g 新组名 用户名     (改变用户所在组)<br>usermod -d 目录名 用户名   (改变用户登录的初始目录,注意:用户要有进入新目录的权限)<br>eg:将apple这个用户从原来的组修改到fruit组：usermod -g fruit apple</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据类型 Java</title>
      <link href="2021/050748647.html"/>
      <url>2021/050748647.html</url>
      
        <content type="html"><![CDATA[<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><img src="https://img-blog.csdnimg.cn/20210430153349546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></p><blockquote><p><strong>注意：C/C++中char占1个字节。但Java中编码是Unicode16，所以一个char占2个字节</strong></p></blockquote><h3 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h3><p>Java的整数类型就是用于存放整数的，如1，12，39等<br>类型     | 占用存储空间    | 范围<br>——– | —–    | ——<br>byte [字节]  | 1字节    |-128 ~ 127<br>short [短整型]  | 2字节    | -2^15 ~ 2^15-1<br>int [整型]  |  4字节    | 4字节 | -2^31 ~ 2^31-1<br>long [长整型]     | 8字节| -2^63 ~ 2^63-1</p><ol><li>Java各整数类型有固定的范围和字段长度，不受OS不同的影响</li><li>Java的整型常量默认为int，要声明long型常量须后加’l’或’L’</li><li>bit：计算机中的最小存储单位。byte：计算机中基本存储单位，1byte=8bit</li></ol><h3 id="浮点类型"><a href="#浮点类型" class="headerlink" title="浮点类型"></a>浮点类型</h3><p>Java的浮点类型可以表示一个小数，如123.4</p><table><thead><tr><th>类型</th><th>占用存储空间</th><th>范围</th></tr></thead><tbody><tr><td>单精度float</td><td>4字节</td><td>-3.403E38 ~ 3.403E38</td></tr><tr><td>双精度double</td><td>8字节</td><td>-1.798E308 ~ 1.798E308</td></tr></tbody></table><ol><li>关于浮点数在机器中存放形式：浮点数=符号位+指数位+尾数为</li><li>尾数部分可能丢失，造成精度损失(小数都是近似值)</li><li>Java的浮点型常量默认为double，声明float要加’f’ 或 ‘F’</li><li>浮点陷阱：double num=8.1 / 3 ≠ 2.7 所以当对<strong>运算结果为小数</strong>时，尽量不要进行相等判断，应该是两数差值在一定范围内就认为相等</li></ol><h3 id="字符类型-char"><a href="#字符类型-char" class="headerlink" title="字符类型(char)"></a>字符类型(char)</h3><p>字符类型可以表示单个字符，字符类型是char，占两个字节(可存汉字)多个字符可以用字符串String存储</p><pre class=" language-java"><code class="language-java"><span class="token keyword">char</span> c1<span class="token operator">=</span><span class="token string">'a'</span><span class="token punctuation">;</span><span class="token keyword">char</span> c2<span class="token operator">=</span><span class="token string">'\t'</span><span class="token punctuation">;</span><span class="token keyword">char</span> c3<span class="token operator">=</span><span class="token string">'哈'</span><span class="token punctuation">;</span><span class="token keyword">char</span> c4<span class="token operator">=</span><span class="token number">97</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//说明字符类型可直接存放一个数字，但在输出时是Unicode码对应的字符</span></code></pre><p>使用细节：</p><ol><li>字符常量使用单引号</li><li>Java还允许使用转义字符’'来将其后的字符变成特殊字符型常量。eg’\n’</li><li>在java中char的本质是一个整数，在输出时是Unicode码对应的字符</li><li>char类型是可以进行运算的，相当于一个整数<blockquote><p>字符类型存储到计算机中，是存储字符对应的码值(整数)<br>eg：’a’ –&gt;码值97 –&gt; 二进制 –&gt;存储</p></blockquote></li></ol><p>字符编码表详解：</p><ul><li>ASCII：一个字节表示，一共表示128个字符，实际最多可表示256，但只用到128个，缺点就是表示字符过少</li><li>Unicode：固定大小的编码，使用两个字节表示字符，字符和汉字统一占用2个字节，浪费空间。<br>优点：将世界所有符号都纳入其中(2的16次方)，使用Unicode不会有乱码问题，且Unicode兼容ASCII码<br>缺点：一个字母或汉字都占2个字符，太浪费空间</li><li>utf-8：大小可变的编码，字母使用1字符，汉字使用3个字节。是互联网使用最广泛的一种Unicode的改进方式。最大优势就是可变长编码。</li><li>gbk：可以表示汉字，且范围广，字母使用1个字节，汉字使用2个</li><li>gb2312：可表示汉字，gb2312&lt;gbk</li><li>big5：繁体中文，台湾，香港</li></ul><h3 id="布尔类型boolean"><a href="#布尔类型boolean" class="headerlink" title="布尔类型boolean"></a>布尔类型boolean</h3><ol><li>布尔类型也叫boolean类型，只允许取值true，false，null</li><li>boolean类型占1个字符</li><li>boolean类型不可用非0之类的代表true或false</li></ol><h2 id="基本数据类型转换"><a href="#基本数据类型转换" class="headerlink" title="基本数据类型转换"></a>基本数据类型转换</h2><p>当java程序进行赋值或运算时，精度小的类型可以自动转换为精度大的数据类型，这就是<strong>自动类型转换</strong><br>char –&gt; int –&gt; long –&gt;float –&gt; double<br>byte –&gt; short –&gt; int –&gt;long –&gt; float –&gt; double<br>自动类型转换注意的细节：</p><ol><li>有多种数据类型混合运算时，系统会先自动转换成精度最大的那种数据类型，然后再计算</li><li>(byte、short)和char之间不会相互自动转换</li><li><strong>byte、short、char三者之间或各自单独都可以计算，但会首先转为int类型</strong>，也就是byte+byte或byte+short都会变为int</li><li>boolean不参与转换<pre class=" language-java"><code class="language-java"><span class="token keyword">float</span> n1 <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">+</span> <span class="token number">1.1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//报错，1.1默认为double，float精度小于double不可转换</span><span class="token keyword">byte</span> b1<span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//正确，会先判断该数是否再byte范围内，如果在就正确</span><span class="token keyword">short</span> s1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">short</span> s2 <span class="token operator">=</span> b1 <span class="token operator">+</span> s1<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//报错，byte,short,char混合运算会转为int，而int精度高于short</span><span class="token keyword">byte</span> b2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">byte</span> b3 <span class="token operator">=</span> b1 <span class="token operator">+</span> b2<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//报错，byte+byte也会先转为int，int精度高于byte</span></code></pre></li></ol><h2 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h2><p>自动类型转换的逆过程，将精度高的转为精度低的。使用时要加上强制转换符()，但可能造成精度损失或溢出。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">int</span> n1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token number">1.9</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1  精度损失</span><span class="token keyword">byte</span> b1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token number">2000</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// -48 数据溢出</span></code></pre><p>强值转换使用细节：</p><ol><li>强制转换符号只针对最近的操作符<pre class=" language-java"><code class="language-java"><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token number">10</span><span class="token operator">*</span><span class="token number">3.5</span><span class="token operator">+</span><span class="token number">6</span><span class="token operator">*</span><span class="token number">1.5</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 报错，这强制转换只针对10，所以运算总体仍未double类型</span></code></pre></li><li>char类型可以保存int的常量值，但不能保存int变量值，需要强转</li><li> <strong>byte、short、char三者之间或各自单独都可以计算，但会首先转为int类型</strong>，也就是byte+byte或byte+short都会变为int</li></ol><h2 id="基本数据类型和String类型的转换"><a href="#基本数据类型和String类型的转换" class="headerlink" title="基本数据类型和String类型的转换"></a>基本数据类型和String类型的转换</h2><h3 id="基本数据类型转为String类型"><a href="#基本数据类型转为String类型" class="headerlink" title="基本数据类型转为String类型"></a>基本数据类型转为String类型</h3><p>语法：将基本类型的值+””即可</p><pre class=" language-java"><code class="language-java"><span class="token keyword">int</span> n1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>String s1 <span class="token operator">=</span> n1 <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span></code></pre><h3 id="String类型转为基本数据类型"><a href="#String类型转为基本数据类型" class="headerlink" title="String类型转为基本数据类型"></a>String类型转为基本数据类型</h3><p>语法：通过基本数据类型的包装类调用parseXXX方法即可</p><pre class=" language-java"><code class="language-java">String s1 <span class="token operator">=</span> <span class="token string">"123"</span><span class="token punctuation">;</span><span class="token keyword">int</span> n1 <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">double</span> d1 <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>特殊：字符串转为char，eg：得到字符串第一个字符</p><pre class=" language-java"><code class="language-java">String s <span class="token operator">=</span> <span class="token string">"123"</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><p>字符串转为基本数据类型时，要是格式不匹配会直接报异常！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定时任务crond&amp;at Linux</title>
      <link href="2021/050720359.html"/>
      <url>2021/050720359.html</url>
      
        <content type="html"><![CDATA[<p>Linux定时执行任务有两种一种是周而复始类，反复执行(crond)，一种是定时执行一次任务(at)</p><h2 id="crond"><a href="#crond" class="headerlink" title="crond"></a>crond</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>crontab 进行定时任务的设置<br>任务调度：指系统在某个时间执行特定的命令或程序<br>调度分类：</p><ol><li>系统工作：有些系统工作必须周而复始地执行。如病毒扫描等</li><li>个别用户工作：个别用户可能希望执行某些程序，如对mysql备份<br><img src="https://img-blog.csdnimg.cn/20210428134925842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></li></ol><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><p>crontab [选项]<br>常用选项：<br>-e：编辑crontab定时任务<br>-l：查询crontab任务<br>-r：删除当前用户所有crontab任务</p><h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><p>设置任务调度文件：/etc/crontab<br>设置个人任务调度。执行crontab -e<br>接着输入任务到调度文件<br>eg:*/1 * * * * ls -l /etc/ &gt; /tmp/to.txt  (注意空格；即每小时的每分钟执行一次ls -l /etc/ &gt; /tmp/to.txt )</p><h4 id="参数细节说明"><a href="#参数细节说明" class="headerlink" title="参数细节说明"></a>参数细节说明</h4><p>5个占位符的说明<br><img src="https://img-blog.csdnimg.cn/2021042813293985.png"><br>特殊符号说明<br><img src="https://img-blog.csdnimg.cn/20210428133657351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"><br>特定时间执行任务案例<br><img src="https://img-blog.csdnimg.cn/20210428133823350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></p><h4 id="crond任务调度实例"><a href="#crond任务调度实例" class="headerlink" title="crond任务调度实例"></a>crond任务调度实例</h4><p>1）：每隔1分钟，就将当前日期信息，追加到/tmp/mydate文件中<br>*/1 * * * * date &gt;&gt; /tmp/mydate<br>2）：每隔1分钟，就将当前日期和日历都追加到/home/mycal中<br>方法1：crontab -e  然后写两条指令即可<br>方法2：先写个脚本，然后定时执行该脚本</p><ol><li>vim /home/my.sh 写入内容：date &gt;&gt; /home/mycal和cal &gt;&gt; /home/mycal</li><li>给my.sh添加执行权限</li><li>crond -e 增加 */1 * * * * /home/my.sh</li></ol><h3 id="crond相关指令"><a href="#crond相关指令" class="headerlink" title="crond相关指令"></a>crond相关指令</h3><ul><li>crontab -r：终止任务调度</li><li>crontab -l：列出所有那些任务调度</li><li>service crond restart：重启任务调度</li></ul><h2 id="at"><a href="#at" class="headerlink" title="at"></a>at</h2><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><ol><li>at命令是一次性定时计划任务，at的守护进程atd会以后台模式运行，检查作业队列来运行</li><li>默认情况下，atd守护进程(运行在后台的特殊进程)每60秒检查作业队列，有作业时，会检查作业运行时间，如果时间与当前时间匹配，则运行此作业</li><li>at命令是一次性定时计划任务，执行完一个任务后不再执行此任务</li><li>在使用at命令的时候，一定要保证atd进程的启动，可以使用相关指令来查看<br>(可用ps -ef grep | ‘atd’ 检查atd是否在运行)<br><img src="https://img-blog.csdnimg.cn/20210502165654628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></li></ol><h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><p>at [选项] [时间]<br>Ctrl+D  结束at命令输入，要输入两次才有反应<br>atq  查看系统中有没有执行的工作任务<br>atrm 编号       删除已经设置的任务</p><h4 id="at命令选项："><a href="#at命令选项：" class="headerlink" title="at命令选项："></a>at命令选项：</h4><p><img src="https://img-blog.csdnimg.cn/20210502162320547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></p><h4 id="at时间定义"><a href="#at时间定义" class="headerlink" title="at时间定义"></a>at时间定义</h4><p>at指定时间的方法：</p><ol><li>接受当天的hh:mm（小时:分钟）式的时间指定。假如该时间已过，则放在第二天执行</li><li>使用midnight(深夜)，noon(中午)，teatime(一般为下午4点)等比较模糊的词语来指定时间</li><li>采用12小时计时制，即在时间后面加上AM或PM说明上下午</li><li>指定命名执行的具体日期，指定格式为month day(月 日)或mm/dd/yy(月/日/年)或dd.mm.yy(日.月.年)，指定的日期必须跟在指定的时间后面。eg 04:00 2021-03-01</li><li>使用相对计时法。指定格式为：now + count time-units，now就是当前时间，time-unites为时间单位(minutes、hours、days、weeks)，count是时间数量。eg：now + 5 minutes</li><li>直接today、tomorrow来指定完成命令时间</li></ol><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><p>1）2天后的下午5点执行 /bin/ls /home<br><img src="https://img-blog.csdnimg.cn/20210502163903878.png"><br>2）明天17点钟，输出时间到指定文件内 比如/root/date1.log<br><img src="https://img-blog.csdnimg.cn/20210502164818432.png"><br>3）删除已经设置的任务，atrm 编号 eg：atrm 1</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> crond </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM、JDK、JER介绍</title>
      <link href="2021/050625004.html"/>
      <url>2021/050625004.html</url>
      
        <content type="html"><![CDATA[<h2 id="JVM-Java-virtue-machine"><a href="#JVM-Java-virtue-machine" class="headerlink" title="JVM(Java virtue machine)"></a>JVM(Java virtue machine)</h2><p>1）JVM是一个虚拟计算机，具有指令集并使用不同的存储区域。负责执行指令，管理数据、内存、寄存器，<strong>包含在JDK中</strong><br>2） 对于不同的平台，有不同的虚拟机。<br>3）Java 虚拟机机制屏蔽了底层运行平台的差别，实现了“一次编译，到处运行”<br><img src="https://img-blog.csdnimg.cn/20210430110848950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70"></p><h2 id="JDK介绍"><a href="#JDK介绍" class="headerlink" title="JDK介绍"></a>JDK介绍</h2><ol><li>JDK(Java Development Kit Java 开发工具包) JDK=JRE+java的开发工具[java,javac,javadoc,javap等]</li><li>JDK是提供给Java开发人员使用的，其中包含java的开发工具，也包括JRE。所有安装了JDK就不用单独安装JRE</li></ol><h2 id="JRE介绍"><a href="#JRE介绍" class="headerlink" title="JRE介绍"></a>JRE介绍</h2><ol><li>JRE(Java Runtime Environment   java运行环境)  JRE=JVM+Java核心类库</li><li>包括Java虚拟机(JVM Java Virtual Machine)和java程序所需要的核心类库。如果想要运行一个开发好的Java程序，只需要安装JRE即可</li></ol><h2 id="JVM、JDK、JRE包含关系"><a href="#JVM、JDK、JRE包含关系" class="headerlink" title="JVM、JDK、JRE包含关系"></a>JVM、JDK、JRE包含关系</h2><ol><li>JDK = JRE + 开发工具集（例如 Javac,java 编译工具等)</li><li>JRE = JVM + Java SE 标准类库（java 核心类库）</li><li>如果只想运行开发好的 .class 文件 只需要 JR</li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>发表博客步骤及一些细节</title>
      <link href="2021/050652308.html"/>
      <url>2021/050652308.html</url>
      
        <content type="html"><![CDATA[<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>在博客目录下Git Bash –&gt;  hexo new “文章名字” </li><li>完成第一步后，会在\source\_posts目录下生成一个对于的md文件</li><li>在md文件中编写博客</li><li>完成后 hexo clean –&gt; hexo g –&gt;hexo s(预览一下) –&gt;hexo d (上传部署)</li><li>要删除该博文只需要去_post下删除对于的markdown博文即可</li></ol><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><ol><li>要想生成目录，不用在md文件编写时加上，这样解析不出来，要在最开始将设置toc: true，这样就会部署之后会自动生成目录</li><li>目录结构从## ，不要从# 开始，这样目录解析不出来</li><li>目录之间空一行，这样才能点击跳到指定位置</li><li>发表有图片的博客时，要想在图片在本地很麻烦，直接用网络地址</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件/目录权限 Linux</title>
      <link href="2021/050617999.html"/>
      <url>2021/050617999.html</url>
      
        <content type="html"><![CDATA[<h2 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h2><p><img src="https://img-blog.csdnimg.cn/20210426125945693.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjk2NTE4,size_16,color_FFFFFF,t_70" alt="1"></p><h2 id="rwx详解"><a href="#rwx详解" class="headerlink" title="rwx详解"></a>rwx详解</h2><h3 id="rwx作用到文件"><a href="#rwx作用到文件" class="headerlink" title="rwx作用到文件"></a>rwx作用到文件</h3><ol><li>[ r ]：代表可读(read)：可以读取，查看</li><li>[ w ]：代表可写(write)：可修改，但不代表可以删除该文件，删除一个文件的前提是对该目录也拥有写权限</li><li>[ x ]：代表可执行(execute)：可以被执行</li></ol><h3 id="rwx作用到目录"><a href="#rwx作用到目录" class="headerlink" title="rwx作用到目录"></a>rwx作用到目录</h3><ol><li>[ r ]：代表可读(read)：可以读取，ls查看目录内容</li><li>[ w ]：代表可写(write)：可修改，对目录内创建+删除+重命名目录</li><li>[ x ]：代表可执行(execute)：可以进入该目录</li></ol><h2 id="修改权限-chmod"><a href="#修改权限-chmod" class="headerlink" title="修改权限 -chmod"></a>修改权限 -chmod</h2><p>可以修改文件或目录的权限</p><ul><li>第一种方式：+、-、= 变更权限<br>u：所有者 g：所在组  o：其他人 a：所有人<br>1）chmod u=rwx,g=rx,o=x 文件/目录名<br>2）chmod o+w 文件/目录名<br>3）chmod a-x 文件/目录名<br>实例：<br>1）给abc文件的所有者 读写执行 的权限，给所在组 读执行 权限，给其他组 读执行 权限<br>chmod u=rwx,g=rx,o=rx abc<br>2）给abc文件所有者除去执行权限，增加所在组写的权限<br>chmod u-x,g+w abc<br>3）给abc文件所有用户添加读权限<br>chmod a+r abc</li><li>第二种方式：通过数字变更权限<br>r=4，w=2，x=1  rwx=7<br>chmod u=rwx,g=rx,o=x 文件/目录名；相当于chmod 751 文件/目录名</li></ul><h2 id="修改文件-目录所有者-chown"><a href="#修改文件-目录所有者-chown" class="headerlink" title="修改文件/目录所有者 chown"></a>修改文件/目录所有者 chown</h2><p>chown newowner 文件/目录名   (改变所有者)<br>chown newowner:newgroup 文件/目录名 (改变所有者，所在组)<br>-R(大写)：如果是一个目录 则使其下所有子文件或目录递归生效<br>eg：将/home/kkk 目录下所有文件和目录的所有者都修改成tom<br>chown -R  tom /home/kkk</p><h1 id="修改文件-目录所在组-chgrp"><a href="#修改文件-目录所在组-chgrp" class="headerlink" title="修改文件/目录所在组 chgrp"></a>修改文件/目录所在组 chgrp</h1><p>chgrp newgroup 文件/目录 (改变所有组)<br>-R(大写)：如果是一个目录 则使其下所有子文件或目录递归生效<br>eg：将 /home/kkk目录下的所有文件和目录的所在组都修改成mokapeng<br>chgrp -R  mokapeng /home/kkk</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
